<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: javascript | Wil Boayue]]></title>
  <link href="http://wil.boayue.com/blog/categories/javascript/atom.xml" rel="self"/>
  <link href="http://wil.boayue.com/"/>
  <updated>2016-06-03T09:57:09-04:00</updated>
  <id>http://wil.boayue.com/</id>
  <author>
    <name><![CDATA[]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Using npm behind a corporate proxy]]></title>
    <link href="http://wil.boayue.com/blog/2013/06/14/using-npm-behind-a-proxy/"/>
    <updated>2013-06-14T23:12:00-04:00</updated>
    <id>http://wil.boayue.com/blog/2013/06/14/using-npm-behind-a-proxy</id>
    <content type="html"><![CDATA[<p>On a recent assignment, I needed to install npm behind a corporate proxy. I had already set the environment variables <code>HTTP_PROXY</code> and <code>HTTPS_PROXY</code>. Other command line utilities, like ruby gems, recognized these environment variables. Npm did not.</p>

<p>After some googling, I found the following way to configure the proxy for npm.</p>

<p>{% codeblock lang:bash %}
npm config set proxy http://proxy.company.com:8080
npm config set https-proxy http://proxy.company.com:8080
{% endcodeblock %}</p>

<p>If you need to specify credentials, they can be passed in the url using the following syntax.</p>

<p><code>http://user_name:password@proxy.company.com:8080</code></p>

<p>Further exploration of the <a href="https://npmjs.org/doc/config.html">npm config documentation</a> showed that the <code>npm config set</code> command sets the proxy configuration in your <code>.npmrc</code> file. You can also set the proxy configuration as a command line argument or environment variable.</p>

<p>Configuration parameters can be specified using <code>--</code> when executing npm. So the proxy could also be specified as follows.</p>

<p>{% codeblock lang:bash %}
npm --https-proxy=http://proxy.company.com:8080 -g install karma
{% endcodeblock %}</p>

<p> To pass configurattion parameters to npm as environment variables, they must be prefixed with <code>npm_config_</code>. The proxy configuration could be set with environment variables as follows.</p>

<p>{% codeblock lang:bash %}
export npm_config_proxy http://proxy.company.com:8080
export npm_config_https_proxy http://proxy.company.com:8080
{% endcodeblock %}</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[WTF Javascript - Type Coercion]]></title>
    <link href="http://wil.boayue.com/blog/2012/07/17/wtf-javascript-type-coercion/"/>
    <updated>2012-07-17T01:27:00-04:00</updated>
    <id>http://wil.boayue.com/blog/2012/07/17/wtf-javascript-type-coercion</id>
    <content type="html"><![CDATA[<p>I recently came across the site wtfjs.com. It highlights some idiosyncrasies of the Javascript language. It’s worth a look, you’ll get a deeper understanding of the Javascript language.</p>

<p>This entry submitted by @diogobaeder held my attention. The solution was not immediately obvious to me so I did some digging. Once I found the correct type coercion rules the result were logical.</p>

<p>{% codeblock lang:javascript %}
var foo = [0];
console.log(foo == foo);    // true
console.log(foo == !foo);   // true - ???
{% endcodeblock %}</p>

<p>These examine this step by step.</p>

<p>{% codeblock lang:javascript %}
foo == foo
{% endcodeblock %}</p>

<p>The above was obvious. References to the same object evaluate to true.</p>

<p>{% codeblock lang:javascript %}
foo == !foo
{% endcodeblock %}</p>

<p>The expression above took a little longer to decipher.</p>

<!-- https://developer.mozilla.org/en/JavaScript/Reference/Operators/Comparison_Operators -->


<p>First the precedence rules come into play.</p>

<p>{% codeblock lang:javascript %}
![0];         // conversion to Boolean(), false
[0] == false; // true
{% endcodeblock %}</p>

<p>If either operand is a number or a boolean, the operands are converted to numbers.</p>

<p>{% codeblock lang:javascript %}
Number(false) == 0;
Number([0]) == 0;</p>

<p>0 == 0;
{% endcodeblock %}</p>
]]></content>
  </entry>
  
</feed>
