<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Wil Boayue]]></title>
  <link href="http://wil.boayue.com/atom.xml" rel="self"/>
  <link href="http://wil.boayue.com/"/>
  <updated>2013-06-15T00:08:41-04:00</updated>
  <id>http://wil.boayue.com/</id>
  <author>
    <name><![CDATA[Wil Boayue]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Using npm behind a corporate proxy]]></title>
    <link href="http://wil.boayue.com/blog/2013/06/14/using-npm-behind-a-proxy/"/>
    <updated>2013-06-14T23:12:00-04:00</updated>
    <id>http://wil.boayue.com/blog/2013/06/14/using-npm-behind-a-proxy</id>
    <content type="html"><![CDATA[<p>On a recent assignment, I needed to install npm behind a corporate proxy. I had already set the environment variables <code>HTTP_PROXY</code> and <code>HTTPS_PROXY</code>. Other command line utilities, like ruby gems, recognized these environment variables. Npm did not.</p>

<p>After some googling, I found the following way to configure the proxy for npm.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>npm config <span class="nb">set </span>proxy http://proxy.company.com:8080
</span><span class='line'>npm config <span class="nb">set </span>https-proxy http://proxy.company.com:8080
</span></code></pre></td></tr></table></div></figure>


<p>If you need to specify credentials, they can be passed in the url using the following syntax.</p>

<p><code>http://user_name:password@proxy.company.com:8080</code></p>

<p>Further exploration of the <a href="https://npmjs.org/doc/config.html">npm config documentation</a> showed that the <code>npm config set</code> command sets the proxy configuration in your <code>.npmrc</code> file. You can also set the proxy configuration as a command line argument or environment variable.</p>

<p>Configuration parameters can be specified using <code>--</code> when executing npm. So the proxy could also be specified as follows.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>npm --https-proxy<span class="o">=</span>http://proxy.company.com:8080 -g install karma
</span></code></pre></td></tr></table></div></figure>


<p> To pass configurattion parameters to npm as environment variables, they must be prefixed with <code>npm_config_</code>. The proxy configuration could be set with environment variables as follows.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">export </span>npm_config_proxy http://proxy.company.com:8080
</span><span class='line'><span class="nb">export </span>npm_config_https_proxy http://proxy.company.com:8080
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby performance patches]]></title>
    <link href="http://wil.boayue.com/blog/2013/03/02/ruby-performance-patches/"/>
    <updated>2013-03-02T13:00:00-05:00</updated>
    <id>http://wil.boayue.com/blog/2013/03/02/ruby-performance-patches</id>
    <content type="html"><![CDATA[<p>There are several ruby performance patches, like the <a href="https://gist.github.com/funny-falcon">falcon patches</a>, that may improve the performace of your application.</p>

<p>I use rvm and was pleased to learn that rvm supports compiling ruby with several of these performance patches. Using rvm with the <em>railsexpress</em> patch, I saw a 20% reduction in the time required to run the test suite for a large rails project.</p>

<p>Here is how you can install ruby with the <em>railexpress</em> patch using rvm.</p>

<p>First make sure you have the latest version of rvm.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rvm get head
</span></code></pre></td></tr></table></div></figure>


<p>Next install ruby 1.9.3 with the railsexpress patch. At this step rvm may have dependencies that require installation.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rvm install 1.9.3 --patch railsexpress
</span></code></pre></td></tr></table></div></figure>


<p>The <em>railsexpress</em> patch contains the following patches.</p>

<ul>
<li><a href="https://github.com/skaes/rvm-patchsets/blob/master/patches/ruby/1.9.3/p392/railsexpress/01-fix-make-clean.patch">01-fix-make-clean.patch</a></li>
<li><a href="https://github.com/skaes/rvm-patchsets/blob/master/patches/ruby/1.9.3/p392/railsexpress/02-railsbench-gc.patch">02-railsbench-gc.patch</a></li>
<li><a href="https://github.com/skaes/rvm-patchsets/blob/master/patches/ruby/1.9.3/p392/railsexpress/03-display-more-detailed-stack-trace.patch">03-display-more-detailed-stack-trace.patch</a></li>
<li><a href="https://github.com/skaes/rvm-patchsets/blob/master/patches/ruby/1.9.3/p392/railsexpress/04-fork-support-for-gc-logging.patch">04-fork-support-for-gc-logging.patch</a></li>
<li><a href="https://github.com/skaes/rvm-patchsets/blob/master/patches/ruby/1.9.3/p392/railsexpress/05-track-live-dataset-size.patch">05-track-live-dataset-size.patch</a></li>
<li><a href="https://github.com/skaes/rvm-patchsets/blob/master/patches/ruby/1.9.3/p392/railsexpress/06-webrick_204_304_keep_alive_fix.patch">06-webrick_204_304_keep_alive_fix.patch</a></li>
<li><a href="https://github.com/skaes/rvm-patchsets/blob/master/patches/ruby/1.9.3/p392/railsexpress/07-export-a-few-more-symbols-for-ruby-prof.patch">07-export-a-few-more-symbols-for-ruby-prof.patch</a></li>
<li><a href="https://github.com/skaes/rvm-patchsets/blob/master/patches/ruby/1.9.3/p392/railsexpress/08-thread-variables.patch">08-thread-variables.patch</a></li>
<li><a href="https://github.com/skaes/rvm-patchsets/blob/master/patches/ruby/1.9.3/p392/railsexpress/09-faster-loading.patch">09-faster-loading.patch</a></li>
<li><a href="https://github.com/skaes/rvm-patchsets/blob/master/patches/ruby/1.9.3/p392/railsexpress/10-falcon-st-opt.patch">10-falcon-st-opt.patch</a></li>
<li><a href="https://github.com/skaes/rvm-patchsets/blob/master/patches/ruby/1.9.3/p392/railsexpress/11-falcon-sparse-array.patch">11-falcon-sparse-array.patch</a></li>
<li><a href="https://github.com/skaes/rvm-patchsets/blob/master/patches/ruby/1.9.3/p392/railsexpress/12-falcon-array-queue.patch">12-falcon-array-queue.patch</a></li>
<li><a href="https://github.com/skaes/rvm-patchsets/blob/master/patches/ruby/1.9.3/p392/railsexpress/13-railsbench-gc-fixes.patch">13-railsbench-gc-fixes.patch</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setting Ubuntu Time Zone]]></title>
    <link href="http://wil.boayue.com/blog/2012/12/04/set-ubuntu-server-timezone/"/>
    <updated>2012-12-04T20:49:00-05:00</updated>
    <id>http://wil.boayue.com/blog/2012/12/04/set-ubuntu-server-timezone</id>
    <content type="html"><![CDATA[<p>You will eventually get tired of looking at UTC timestamps in your server log files.</p>

<p><a href="https://help.ubuntu.com/community/UbuntuTime">https://help.ubuntu.com/community/UbuntuTime</a> has a detailed guide for setting the time zone on your server and synchronizing it&#8217;s clock.</p>

<p>Here are the commands I used to set my time zone and synchronize my clock on Ubuntu 12.04.1 LTS.</p>

<p><strong>Set time zone</strong></p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo dpkg-reconfigure tzdata
</span></code></pre></td></tr></table></div></figure>


<p><strong>Synchronize clock</strong></p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo apt-get install ntp
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[WTF Javascript - Type Coercion]]></title>
    <link href="http://wil.boayue.com/blog/2012/07/17/wtf-javascript-type-coercion/"/>
    <updated>2012-07-17T01:27:00-04:00</updated>
    <id>http://wil.boayue.com/blog/2012/07/17/wtf-javascript-type-coercion</id>
    <content type="html"><![CDATA[<p>I recently came across the site wtfjs.com. It highlights some idiosyncrasies of the Javascript language. It’s worth a look, you’ll get a deeper understanding of the Javascript language.</p>

<p>This entry submitted by @diogobaeder held my attention. The solution was not immediately obvious to me so I did some digging. Once I found the correct type coercion rules the result were logical.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">foo</span> <span class="o">=</span> <span class="p">[</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">foo</span> <span class="o">==</span> <span class="nx">foo</span><span class="p">);</span>  <span class="c1">// true</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">foo</span> <span class="o">==</span> <span class="o">!</span><span class="nx">foo</span><span class="p">);</span>  <span class="c1">// true - ???</span>
</span></code></pre></td></tr></table></div></figure>


<p>These examine this step by step.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">foo</span> <span class="o">==</span> <span class="nx">foo</span>
</span></code></pre></td></tr></table></div></figure>


<p>The above was obvious. References to the same object evaluate to true.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">foo</span> <span class="o">==</span> <span class="o">!</span><span class="nx">foo</span>
</span></code></pre></td></tr></table></div></figure>


<p>The expression above took a little longer to decipher.</p>

<!-- https://developer.mozilla.org/en/JavaScript/Reference/Operators/Comparison_Operators -->


<p>First the precedence rules come into play.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="o">!</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span>         <span class="c1">// conversion to Boolean(), false</span>
</span><span class='line'><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">==</span> <span class="kc">false</span><span class="p">;</span> <span class="c1">// true</span>
</span></code></pre></td></tr></table></div></figure>


<p>If either operand is a number or a boolean, the operands are converted to numbers.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nb">Number</span><span class="p">(</span><span class="kc">false</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="nb">Number</span><span class="p">([</span><span class="mi">0</span><span class="p">])</span> <span class="o">==</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="mi">0</span> <span class="o">==</span> <span class="mi">0</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
</feed>
